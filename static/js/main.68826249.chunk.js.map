{"version":3,"sources":["components/HomeComponent.js","shared/costumers.js","shared/baseUrl.js","redux/ActionCreaters.js","redux/ActionTypes.js","components/upload.js","components/AddCostumer.js","components/Popover.js","components/CostumerDetails.js","components/PaymentDetails.js","components/AddPayment.js","components/AllPayments.js","components/accordian.js","components/MainComponent.js","redux/costumers.js","redux/payments.js","redux/images.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Home","style","paddingLeft","paddingRight","borderRadius","fontSize","marginTop","marginLeft","fontWeight","Component","costumers","baseUrl","fetchCostumers","dispatch","type","fetch","then","response","ok","error","Error","status","statusText","errorMessage","json","payload","catch","message","fetchPayments","payments","postImages","value","newImage","image","method","body","JSON","stringify","headers","credentials","alert","console","log","Upload","props","state","file","imagePreviewUrl","_handleImageChange","bind","_handleSubmit","getimages","this","fetchImages","e","document","getElementById","reset","setState","preventDefault","reader","FileReader","target","files","onloadend","result","readAsDataURL","images","map","src","height","width","paddingTop","alt","paddingBottom","className","onSubmit","id","onChange","required","onClick","withRouter","connect","Images","AddCostumer","arr","number","handleInputChange","handleSubmit","add","event","checked","name","values","postCostumer","resetFeedbackForm","push","warehouses","i","class","htmlFor","text","model","to","background","placeholder","len","textAlign","alignSelf","md","size","offset","onMouseDown","color","Costumers","Example","warehouses1","costumer1","w","useState","popoverOpen","setPopoverOpen","toggle","placement","isOpen","CostumerDetail","costumer","cat","costumerlist","key","handleChange","addr","phno","length","area","scope","zostumers","PaymentDetail","tranxid","amtsent","otherinfo","Payments","AddPayment","resetPaymentForm","AllPayments","refresh","totalamt","notranx","DummyContent1","padding","DummyContent2","Acc","atomic","title","Main","position","top","left","overflowx","align","path","component","exact","PaymentDetails","postPayment","actions","newCostumer","sno","warehousesno","newPayment","amt","other","z","filter","a","parseInt","err","isLoading","errMess","action","payment","date","Date","toISOString","concat","InitialFeedback","Payment","Image","img","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","rel","href","integrity","crossorigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68826249.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {         \r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px', fontSize:'20px', marginTop:'10%',marginLeft:'10%'}}>\r\n                <span style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px', fontSize:'20px', marginTop:'10%',marginLeft:'10%',fontWeight:'bolder'}}>HOME</span> \r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","export const costumers = \r\n    [\r\n        {\r\n            \"id\":'1',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer1\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'2',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer2\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'3',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer3\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'4',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer4\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'5',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer5\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                [\"t1,25\"],[\"t2,25\"],\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'6',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer6\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n    ]\r\n","export const baseUrl = 'https://poultryerp.herokuapp.com/';\r\n\r\n//https://poultryerp.herokuapp.com/","import * as ActionTypes from './ActionTypes';\r\nimport { costumers } from '../shared/costumers';\r\nimport { payments,total } from '../shared/payment';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\nexport const addCostumer = (costumer)=>\r\n{\r\n    return(\r\n        {\r\n            type:ActionTypes.ADD_COSTUMERS,\r\n            payload:costumer\r\n        }\r\n    )\r\n}\r\n\r\nexport const postCostumer = (values)=>(dispatch)=>{\r\nconst newCostumer ={\r\n        id:values.sno,\r\n        cat:values.cat,\r\n        name:values.name,\r\n        addr:values.addr,\r\n        phno:values.phno,\r\n        warehousesno:values.warehousesno,\r\n        area:values.area,\r\n        warehouses:values.warehouses,\r\n        totalamt:0,\r\n        notranx:0,\r\n}\r\n\r\ncostumers.push(newCostumer)\r\n\r\nreturn fetch(baseUrl + \"costumers\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newCostumer),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n      })\r\n        .then(\r\n          response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } else {\r\n              var error = new Error(\r\n                \"Error \" + response.status + \": \" + response.statusText\r\n              );\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n            throw error;\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response =>\r\n          alert(\"Costumer Added!\" + JSON.stringify(response))\r\n        )\r\n        .catch(error => {\r\n          console.log(\"post Costumer\", error.message);\r\n          alert(\"Your Costumer could not be posted\\nError: \" + error.message);\r\n        });\r\n    };\r\n\r\n\r\nexport const costumerFailed = (errmess)=>({\r\n        type:ActionTypes.COSTUMERS_FAILED,\r\n        payload:errmess\r\n})\r\n\r\nexport const costumersLoading=()=>({\r\n        type:ActionTypes.COSTUMERS_LOADING\r\n});\r\n\r\n\r\n\r\nexport const fetchCostumers = () => (dispatch) => {\r\n        dispatch(costumersLoading(true));\r\n\r\n    \r\n        return fetch(baseUrl + 'costumers')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n    \r\n                    throw error;\r\n                }\r\n            },\r\n                error => {\r\n                    var errorMessage = new Error(error.errorMessage);\r\n                    throw errorMessage;\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(costumers=> dispatch(addCostumer(costumers)))\r\n            .catch(error => dispatch(costumerFailed(error.message)))\r\n    }\r\n\r\n\r\n\r\nexport const addPayment = (payment)=>\r\n{\r\n    return(\r\n        {\r\n            type:ActionTypes.ADD_PAYMENTS,\r\n            payload:payment\r\n        }\r\n    )\r\n}\r\n\r\nexport const updateCostumer = (value)=>\r\n{\r\n  return(\r\n    {\r\n      type : ActionTypes.UPDATE_COSTUMERS,\r\n      payload:value\r\n    }\r\n  )\r\n}\r\n\r\nexport const postPayment = (values)=>(dispatch)=>{\r\nconst name = values.name\r\nconst newPayment ={\r\n        id:values.sno,\r\n        cat:values.cat,\r\n        name:values.name,\r\n        tranxid:values.tranxid,\r\n        amtsent:values.amt,\r\n        type:values.type,\r\n        phno:values.phno,\r\n        otherinfo:values.other,\r\n}\r\n  \r\nreturn (\r\n  fetch(baseUrl + \"costumers/\")\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      try{\r\n      let z = json.filter(a => a.name==values.name)[0]\r\n    \r\n      if(z)\r\n      {\r\n        fetch(baseUrl + \"costumers/\"+z.id, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({notranx:z.notranx+1,totalamt:z.totalamt+parseInt(values.amt)}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n        })\r\n        .then(\r\n          response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } else {\r\n              var error = new Error(\r\n                \"Error \" + response.status + \": \" + response.statusText\r\n              );\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n            throw error;\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response =>\r\n          alert(\"Costumer DaTa Updated!\" + JSON.stringify(response))\r\n        )\r\n        .then( response =>\r\n          {\r\n            fetch(baseUrl + \"payments\", {\r\n              method: \"POST\",\r\n              body: JSON.stringify(newPayment),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              credentials: \"same-origin\"\r\n            })\r\n              .then(\r\n                response => {\r\n                  if (response.ok) {\r\n                    return response;\r\n                  } else {\r\n                    var error = new Error(\r\n                      \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                  }\r\n                },\r\n                error => {\r\n                  throw error;\r\n                }\r\n              )\r\n              .then(response => response.json())\r\n              .then(response =>\r\n                alert(\"Payment Added!\" + JSON.stringify(response))\r\n              )\r\n              .catch(error => {\r\n                console.log(\"post Payment\", error.message);\r\n                alert(\"Your Payment could not be posted\\nError: \" + error.message);\r\n              })\r\n          })\r\n        .catch(error => {\r\n          console.log(\"Update Costumer\", error.message);\r\n          alert(\"Your Costumer Data could not be updated\\nError: \" + error.message);\r\n        })\r\n\r\n        \r\n      \r\n      }\r\n        else{\r\n          throw 1\r\n        }\r\n      }\r\n      catch(err){\r\n        alert(\"No such Costumer exists in the database\")\r\n      }\r\n    \r\n    })  \r\n\r\n  \r\n  )\r\n};\r\n\r\n\r\nexport const paymentFailed = (errmess)=>({\r\n        type:ActionTypes.PAYMENTS_FAILED,\r\n        payload:errmess\r\n})\r\n\r\nexport const paymentsLoading=()=>({\r\n        type:ActionTypes.PAYMENTS_LOADING\r\n});\r\n\r\nexport const fetchPayments = () => (dispatch) => {\r\n  dispatch(paymentsLoading(true));\r\n\r\n  return fetch(baseUrl + 'payments')\r\n      .then(response => {\r\n          if (response.ok) {\r\n              return response;\r\n          } else {\r\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n              error.response = response;\r\n\r\n              throw error;\r\n          }\r\n      },\r\n          error => {\r\n              var errorMessage = new Error(error.errorMessage);\r\n              throw errorMessage;\r\n          }\r\n      )\r\n      .then(response => response.json())\r\n      .then(payments=> dispatch(addPayment(payments)))\r\n      .catch(error => dispatch(paymentFailed(error.message)))\r\n}\r\n\r\n\r\nexport const addImages = (image)=>\r\n{\r\n    return(\r\n        {\r\n            type:ActionTypes.ADD_IMAGES,\r\n            payload:image\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const postImages = (value)=>(dispatch)=>{\r\n  const newImage ={\r\n    image : value\r\n  }\r\n  \r\n  return fetch(baseUrl + \"images\", {\r\n          method: \"POST\",\r\n          body: JSON.stringify(newImage),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: \"same-origin\"\r\n        })\r\n          .then(\r\n            response => {\r\n              //alert(JSON.stringify(newImage))\r\n              if (response.ok) {\r\n                return response;\r\n              } else {\r\n                var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n                );\r\n                error.response = response;\r\n                throw error;\r\n              }\r\n            },\r\n            error => {\r\n              throw error;\r\n            }\r\n          )\r\n          .then(response => response.json())\r\n          .then(response =>\r\n            alert(\"Image Added!\" )\r\n          )\r\n          .catch(error => {\r\n            console.log(\"post Image\", error.message);\r\n            alert(\"Your Image could not be posted\\nError: \" + error.message);\r\n          });\r\n};\r\n\r\nexport const imagesFailed = (errmess)=>({\r\n  type:ActionTypes.IMAGES_FAILED,\r\n  payload:errmess\r\n})\r\n\r\nexport const imagesLoading=()=>({\r\n  type:ActionTypes.IMAGES_LOADING\r\n});\r\n\r\n  \r\n\r\nexport const fetchImages = () => (dispatch) => {\r\n  dispatch(imagesLoading(true));\r\n  \r\n  return fetch(baseUrl + 'images')\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n      \r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n      var errorMessage = new Error(error.errorMessage);\r\n      throw errorMessage;\r\n    }\r\n    )\r\n    .then(response => response.json())\r\n    .then(images=> dispatch(addImages(images)))\r\n    .catch(error => dispatch(imagesFailed(error.message)))\r\n}\r\n","export const COSTUMERS_LOADING = 'COSTUMERS_LOADING';\r\nexport const COSTUMERS_FAILED = 'COSTUMERS_FAILED';\r\nexport const ADD_COSTUMERS = 'ADD_COSTUMERS';\r\nexport const UPDATE_COSTUMERS = 'UPDATE_COSTUMERS';\r\nexport const PAYMENTS_LOADING = 'PAYMENTS_LOADING';\r\nexport const PAYMENTS_FAILED = 'PAYMENTS_FAILED';\r\nexport const ADD_PAYMENTS = 'ADD_PAYMENTS';\r\nexport const IMAGES_LOADING = 'IMAGES_LOADING';\r\nexport const IMAGES_FAILED = 'IMAGES_FAILED';\r\nexport const ADD_IMAGES = 'ADD_IMAGES';","import React,{Component} from 'react';\r\nimport '../App.css';\r\n\r\nimport {withRouter } from 'react-router-dom';\r\nimport { postImages,fetchImages } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      images: state.Images\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      postImages:(value)=>{dispatch(postImages(value))},\r\n      fetchImages:()=>{dispatch(fetchImages())}\r\n    }\r\n  )\r\n}\r\n\r\n\r\n\r\nclass Upload extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        file: '',\r\n        imagePreviewUrl: ''\r\n      };\r\n      this._handleImageChange = this._handleImageChange.bind(this);\r\n      this._handleSubmit = this._handleSubmit.bind(this);\r\n      this.getimages = this.getimages.bind(this);\r\n    }\r\n\r\n    getimages(){\r\n        this.props.fetchImages();\r\n        //alert(JSON.stringify(this.props.images.images))\r\n    }\r\n  \r\n    _handleSubmit(e) {\r\n        this.props.postImages(this.state.imagePreviewUrl)\r\n        document.getElementById(\"form-input\").reset();\r\n        this.setState({\r\n          file: '',\r\n          imagePreviewUrl: ''\r\n        });\r\n      e.preventDefault();\r\n      \r\n    }\r\n  \r\n    _handleImageChange(e) {\r\n      e.preventDefault();\r\n  \r\n      let reader = new FileReader();\r\n      let file = e.target.files[0];\r\n  \r\n      reader.onloadend = () => {\r\n          this.setState({\r\n              file: file,\r\n              imagePreviewUrl: reader.result\r\n            });\r\n            //console.log('RESULT', reader.result)\r\n      }\r\n  \r\n      reader.readAsDataURL(file)\r\n    }\r\n  \r\n    render() {\r\n      let {imagePreviewUrl} = this.state;\r\n      let $imagePreview = null;\r\n      if (imagePreviewUrl) {\r\n        $imagePreview = (<img src={imagePreviewUrl} />);\r\n      }\r\n\r\n      const images = this.props.images.images.map((image) => {\r\n          return(\r\n              <div>\r\n                  <img src={image.image} height='100' width='100' style={{paddingTop:'50px'}} alt=\"This is in .pdf format\"></img>\r\n              </div>\r\n          )\r\n      })\r\n  \r\n      return (\r\n        <div style={{paddingLeft:'40px', paddingRight:'40px',paddingBottom:'50px', borderRadius:'12px'}}>\r\n          <div className=\"incanvas\">\r\n                    <b>Images Upload</b>\r\n          </div>\r\n\r\n        <div className=\"component\" style={{ fontSize:'20px', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px',borderRadius:'50px'}}>\r\n          <form onSubmit={this._handleSubmit} id=\"form-input\">\r\n            <input className='buttonimg' type=\"file\" onChange={this._handleImageChange} required/>\r\n            <button className='buttonimg' type=\"submit\" onClick={this._handleSubmit}>Upload File</button>\r\n          </form>\r\n          <img src={this.state.imagePreviewUrl} />\r\n\r\n          <br/>\r\n          <br/>\r\n          <div>\r\n              <button className='buttonimg' onClick={this.getimages}>See Uploaded Files</button>\r\n              {images}\r\n          </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  export default withRouter(connect(mapStateToProps,mapDispatchToProps)(Upload));","import React,{Component} from 'react';\r\nimport {costumers} from '../shared/costumers'\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row ,Input} from 'reactstrap';\r\nimport '../App.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n    \r\nimport {Link} from 'react-router-dom';\r\nimport {withRouter } from 'react-router-dom';\r\nimport { postCostumer, fetchCostumers, postPayment } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\nclass AddCostumer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            arr:[0,1,2],\r\n            number:3\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.add = this.add.bind(this);\r\n    }\r\n    \r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values) {\r\n        alert(JSON.stringify(values))\r\n        this.props.postCostumer(values);\r\n        this.props.resetFeedbackForm();\r\n        this.props.fetchCostumers();\r\n        this.setState({\r\n            number: this.state.number+1\r\n          });\r\n      }\r\n\r\n    \r\n    add(){\r\n        this.state.arr.push(this.state.number);\r\n        this.setState({\r\n            number: this.state.number+1\r\n          });\r\n    }\r\n    \r\n      \r\n    render() { \r\n\r\n\r\n        var warehouses = this.state.arr.map((i) =>{\r\n                return(\r\n                    <Row className=\"form-group mb-2 formrow\">\r\n\r\n                                <div class=\"form-group mb-2 \" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"warehouses\">Warehouse Name</label>\r\n                                    <Control.text model={`.warehouses[${i}]`} class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                                <div class=\"form-group mb-2 mx-4 float-right\" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"\">Area</label>\r\n                                    <Control.text model={`.area[${i}]`} class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                            </Row>\r\n                );\r\n        });\r\n        \r\n            return (\r\n                <div style={{paddingLeft:'40px', paddingRight:'40px' , paddingBottom:'40px', borderRadius:'12px'}}>\r\n                    <div className=\"incanvas\" style={{}}>\r\n                        <b>Add Costumer Details</b>\r\n                        <Link type=\"button\" className=\"topbutton float-right\" to='/costumerdetails'>Save</Link>\r\n                    </div>\r\n\r\n                    <div style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n\r\n                    <Form onSubmit={this.handleSubmit} model=\"costumer\" >\r\n\r\n                        \t\r\n                        <Row className=\"form-group mb-2 formrow\">\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"sno\">S.no</label>\r\n                                <Control.text model=\".sno\" class=\"formbox form-control\" placeholder={this.props.len+1} value={this.props.len+1}/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"name\">Costumer Name</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".name\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"cat\">Category</label>\r\n                                <Control.text model=\".cat\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"addr\">Address</label>\r\n                                <Control.text model=\".addr\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group mb-2 formrow\">\r\n\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"phno\">Contact Number</label>\r\n                                <Control.text model=\".phno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"warehouseno\">Number Of Warehouses</label>\r\n                                <Control.text model=\".warehouseno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <hr style={{width:'100%'}}></hr>\r\n\r\n                        <div className=\"form-group mb-2 formrow\" >\r\n\r\n                            <h3 style={{textAlign:'center'}}>Add Warehouses</h3>\r\n\r\n                            \r\n\r\n                            {warehouses}\r\n\r\n                        </div>\r\n\r\n                        <Row alignSelf=\"center\" style={{alignSelf:'center'}}>\r\n                        <Col md={{size: 10, offset: 2}}>\r\n                        <button onMouseDown={this.add} className=\"button2 form-group\" style={{width:'20%',alignSelf:'center'}}> + Add Warehouse</button>\r\n                        </Col>\r\n                        </Row>\r\n\r\n                        {/*Submit button for the form.*/}\r\n                        <Row className=\"form-group\">                            \r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                </Form>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            );\r\n        };\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AddCostumer));","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { costumers } from '../shared/costumers';\r\n\r\nconst Example = (props) => {\r\n   \r\n    const warehouses1 = props.costumer1.warehouses.map((w) => {\r\n        return(\r\n            <div>\r\n                <strong>{w}</strong>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n  return (\r\n    <div>\r\n      <div id={props.costumer1.name} type=\"button\" onClick={toggle}>\r\n        <b>View</b>\r\n      </div>\r\n      <Popover placement=\"bottom\" isOpen={popoverOpen} target={props.costumer1.name} toggle={toggle}>\r\n        <PopoverHeader>Warehouses</PopoverHeader>\r\n        <PopoverBody>{warehouses1}</PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Example from './Popover';\r\nimport {costumers} from '../shared/costumers';\r\nimport {withRouter } from 'react-router-dom';\r\nimport { fetchCostumers } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      zostumers : state.Costumers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\nclass CostumerDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n      }\r\n\r\n    \r\n    handleChange(costumer){\r\n        return(\r\n            <div>\r\n                <td>{costumer.cat}</td>\r\n                <td>{costumer.name}</td>\r\n            </div>\r\n        )\r\n      }\r\n\r\n    \r\n\r\n\r\n    render() { \r\n        //alert(JSON.stringify(this.props.costumers))\r\n        \r\n        const costumerlist = this.props.costumers.costumers.map((costumer) => {\r\n            return (\r\n                <tr key={costumer.id}>\r\n                    <th><input type=\"checkbox\" className=\"m-1\" onChange={this.handleChange(costumer)}></input>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.addr}</td>\r\n                    <td>{costumer.phno}</td>\r\n                    <td>{costumer.warehouses.length}</td>\r\n                    <td><Example costumer1={costumer} key={costumer.id}/></td>\r\n                    <td>{costumer.area}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <strong>Costumer Details</strong>\r\n                    <Link type=\"button\" className=\"topbutton float-right\" to='/addcostumer'>Add New</Link>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{ borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\">Save</button>\r\n                            <button className=\"button1 mx-sm-1\">Delete</button>\r\n                            <button className=\"button1 mx-sm-1\">Edit</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Address</th>\r\n                            <th scope=\"col\">Contant No</th>\r\n                            <th scope=\"col\">No Of Warehouses</th>\r\n                            <th scope=\"col\">Warehouse Name</th>\r\n                            <th scope=\"col\">Area</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(CostumerDetail));","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport {payments } from '../shared/payment';\r\nimport { fetchPayments } from '../redux/ActionCreaters';\r\nimport {withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      payments : state.Payments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchPayments:()=>{dispatch(fetchPayments())},\r\n    }\r\n  )\r\n}\r\n\r\nclass PaymentDetail extends Component {\r\n\r\n   \r\n    \r\n    handleChange(costumer){\r\n        return(\r\n            <div>\r\n                <td>{costumer.cat}</td>\r\n                <td>{costumer.name}</td>\r\n            </div>\r\n        )\r\n      }\r\n\r\n    \r\n      componentDidMount()\r\n      {\r\n          this.props.fetchPayments();\r\n      }\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const costumerlist =this.props.payments.payments.map((costumer) => {\r\n            return (\r\n                <tr>\r\n                    <th>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.tranxid}</td>\r\n                    <td>{costumer.phno}</td>\r\n                    <td>{costumer.amtsent}</td>\r\n                    <td>{costumer.type}</td>\r\n                    <td>{costumer.otherinfo}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <b>Payment Details</b>\r\n                    <Link type=\"button\" className=\"topbutton float-right\" to='/addpayment'>Add New</Link>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\">Save</button>\r\n                            <button className=\"button1 mx-sm-1\">Delete</button>\r\n                            <button className=\"button1 mx-sm-1\">Edit</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1 mx-sm-1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Tranx ID</th>\r\n                            <th scope=\"col\">Contant No</th>\r\n                            <th scope=\"col\">Amount sent</th>\r\n                            <th scope=\"col\">Transaction Type</th>\r\n                            <th scope=\"col\">Other Information</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(PaymentDetail));","import React,{Component} from 'react';\r\nimport {payments} from '../shared/payment'\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\r\nimport '../App.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n    \r\nimport {Link} from 'react-router-dom';\r\nimport { fetchPayments } from '../redux/ActionCreaters';\r\nimport { postPayment } from '../redux/ActionCreaters';\r\nimport {withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      payments : state.Payments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n        fetchPayments:()=>{dispatch(fetchPayments())},\r\n    }\r\n  )\r\n}\r\n\r\n\r\nclass AddPayment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values) {\r\n        alert(JSON.stringify(values))\r\n        this.props.postCostumer(values);\r\n        this.props.fetchPayments();\r\n        this.props.resetPaymentForm();\r\n        \r\n      }\r\n    \r\n      \r\n    render() { \r\n        \r\n            return (\r\n                <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                    <div className=\"incanvas\" style={{}}>\r\n                        <b>Add Payment Details</b>\r\n                        <Link type=\"button\" className=\"topbutton float-right\" to='/paymentdetails'>Save</Link>\r\n                    </div>\r\n\r\n\r\n                    <Form onSubmit={this.handleSubmit} model=\"payment\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n\r\n                        \t\r\n                        <Row>\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".sno\">S.no</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".sno\" class=\"formbox form-control\" placeholder={this.props.len+1} value={this.props.len+1}/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".name\">Costumer Name</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".name\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".cat\">Category</label>\r\n                                <Control.text model=\".cat\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".tranxid\">Transaction ID</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".tranxid\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".amt\">Amount Sent</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".amt\" class=\"formbox form-control\" required/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"name\">Transaction Type</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".type\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"phno\">Pnone Number</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".phno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                           <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"other\">Other Information</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".other\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                        \r\n\r\n                        <hr style={{width:'100%'}}></hr>\r\n\r\n                        \r\n\r\n                        {/*Submit button for the form.*/}\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Save Payment\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                </Form>\r\n\r\n            </div>\r\n            );\r\n        };\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AddPayment));","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport {payments, total } from '../shared/payment';\r\nimport { costumers } from '../shared/costumers';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchCostumers } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\n\r\nclass AllPayments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh(){\r\n        this.props.fetchCostumers();\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const costumerlist =this.props.costumers.costumers.map((costumer) => {\r\n            return (\r\n                <tr>\r\n                    <th>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.totalamt}</td>\r\n                    <td>{costumer.notranx}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <b>All Payments Reports</b>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\" onClick={this.refresh}>Refresh</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Total Amount Sent</th>\r\n                            <th scope=\"col\">No. of Transactions</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AllPayments));","import React from 'react';\r\nimport { Accordion, AccordionItem } from 'react-light-accordion';\r\nimport 'react-light-accordion/demo/css/index.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst Acc = () => (\r\n  <div>\r\n    <Accordion atomic={true}>\r\n\r\n    \r\n      <AccordionItem type=\"button\" title={<NavLink type=\"button\" className=\"sidebaritem p-2 mb-3 fa fa-home \"  to='/costumerdetails' style={{paddingTop:'20px'}}>Add Profile information</NavLink>} className=\" p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  style={{paddingTop:'20px'}}>                 \r\n        <DummyContent1 />\r\n      </AccordionItem>\r\n\r\n      \r\n      <AccordionItem type=\"button\" title={<NavLink type=\"button\" className=\"sidebaritem p-2 mb-3 fa fa-home \"  to='/paymentdetails' style={{paddingTop:'20px'}}>Payment Transactions</NavLink>} className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  style={{paddingTop:'20px'}}>                 \r\n        <DummyContent2 />\r\n      </AccordionItem>\r\n\r\n    </Accordion>\r\n  </div>\r\n);\r\n\r\nconst DummyContent1 = () => (\r\n  <p style={{ padding: '18px' }} className=\"dummy\">\r\n     &#62;&#62;&nbsp;&nbsp;Costumer Details\r\n  </p>\r\n);\r\n\r\nconst DummyContent2 = () => (\r\n    <p style={{ padding: '18px' }} className=\"dummy\">\r\n       &#62;&#62;&nbsp;&nbsp;Payment Details\r\n    </p>\r\n  );\r\n\r\nexport default Acc;","import React,{Component} from 'react';\r\nimport '../App.css';\r\nimport Home from './HomeComponent';\r\nimport Upload from './upload';\r\nimport CostumerDetail from './CostumerDetails';\r\nimport PaymentDetails from './PaymentDetails';\r\nimport {costumers } from '../shared/costumers';\r\nimport { Switch, Route, Redirect,withRouter } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AddPayment from './AddPayment';\r\nimport AllPayments from './AllPayments';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { postCostumer, fetchCostumers, postPayment, fetchPayments,postImages } from '../redux/ActionCreaters';\r\nimport AddCostumer from './AddCostumer';\r\nimport {actions } from 'react-redux-form';\r\nimport {connect} from 'react-redux';\r\nimport Acc from './accordian';\r\nimport { Accordion, AccordionItem } from 'react-light-accordion';\r\n//import CollapseSide from './collapse';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers,\r\n      payments : state.Payments,\r\n      images : state.Images\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n      fetchPayments:()=>{dispatch(fetchPayments())},\r\n      resetFeedbackForm:()=>{dispatch(actions.reset('costumer'))},\r\n      postCostumer:(values)=>dispatch(postCostumer(values)),\r\n      resetPaymentForm:()=>{dispatch(actions.reset('payment'))},\r\n      postPayment:(values)=>dispatch(postPayment(values)),\r\n      postImages:(values)=>dispatch(postImages(values))      \r\n    }\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.fetchCostumers();\r\n        this.props.fetchPayments()\r\n    }\r\n    \r\n    render() {   \r\n           \r\n        \r\n    \r\n        return (\r\n        <div className=\"all\">\r\n            <nav className=\"navbar navbar-light bg-light sticky-top navclass\" style={{}}>\r\n                <NavbarBrand ><b>Poultry ERP Project</b></NavbarBrand>\r\n                <div className=\"float-right\">\r\n                    <NavLink type=\"button\"className=\"btn btn-outline-success my-2 my-sm-0 btn1 mx-sm-1\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                    <NavLink className=\"btn btn-outline-success my-2 my-sm-0 btn1 mx-sm-1\" to='/upload' type=\"button\">My Documents</NavLink>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\">Logout<span className=\"fa fa-logout fa-lg\"></span> </button>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"cover\">\r\n                <div class=\" text-dark sidenav\" style={{height: '100%',\r\n                                                            position: 'fixed',\r\n                                                            top: '0',\r\n                                                            left: '0',\r\n                                                            overflowx: 'hidden',\r\n                                                            paddingTop: '7rem',\r\n                                                            background: '#FFFFFF 0% 0% no-repeat padding-box'}}>\r\n\r\n                    <div className=\"\">\r\n                        <strong class=\"p-3 mb-2 bn1\">Data input</strong>\r\n                        <hr width=\"50%\" align=\"left\" style={{paddingLeft:'20%', color:'#707070'}}></hr>\r\n                        {/*<NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  to='/costumerdetails' style={{paddingTop:'20px'}}>Add Profile information</NavLink>\r\n                        <NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  to='/paymentdetails' style={{paddingTop:'20px'}}>Payment Transactions</NavLink>*/}\r\n                        <Acc/>\r\n                    \r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"\">\r\n                        <strong class=\"p-3 mb-2 bn1 \">Reports</strong>\r\n                        <hr width=\"50%\" align=\"left\" style={{paddingLeft:'20%', color:'#707070'}}></hr>\r\n                        {/*<NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg mx-sm-1\"  to='/allpayments' style={{paddingTop:'20px'}}>Payment Report</NavLink>*/}\r\n                        <Accordion atomic={true}>    \r\n                            <AccordionItem type=\"button\" title={<NavLink type=\"button\" className=\"sidebaritem p-2 mb-3 fa fa-home \"  to='/allpayments' style={{paddingTop:'20px'}}>All Payments</NavLink>} className=\" p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  style={{paddingTop:'20px'}}> </AccordionItem>\r\n                        </Accordion>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        <Route path='/home' component={Home} />\r\n                        <Route exact path='/costumerdetails' component={()=><CostumerDetail costumers={this.props.costumers}/>} />\r\n                        <Route exact path='/addcostumer' component={()=><AddCostumer len={this.props.costumers.costumers.length} resetFeedbackForm={this.props.resetFeedbackForm} postCostumer={this.props.postCostumer}/>} />\r\n                        <Route exact path='/paymentdetails' component={()=><PaymentDetails payments={this.props.payments}/>} />\r\n                        <Route exact path='/addpayment' component={()=><AddPayment len={this.props.payments.payments.length} resetPaymentForm={this.props.resetPaymentForm} postCostumer={this.props.postPayment}/>} />\r\n                        <Route exact path='/allpayments' component={AllPayments} />\r\n                        <Route path='/upload' component={Upload} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n  \r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n      }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Costumers = (state = { isLoading: true,\r\n    errMess: null,\r\n    costumers:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COSTUMERS:\r\n            return {...state, isLoading: false, errMess: null, costumers: action.payload};\r\n\r\n        case ActionTypes.COSTUMERS_FAILED:\r\n            return {...state, isLoading: true, errMess: null, costumers: []}\r\n\r\n        case ActionTypes.UPDATE_COSTUMERS:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Payments = (state = { errMess: null, payments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PAYMENTS:\r\n      return {...state, errMess: null, payments: action.payload};\r\n\r\n    case ActionTypes.PAYMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_PAYMENTS:\r\n        var payment = action.payload;\r\n        payment.id = state.payments.length;\r\n        payment.date = new Date().toISOString();\r\n        return { ...state, payments: state.payments.concat(payment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Images = (state = { isLoading: true,\r\n    errMess: null,\r\n    images:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_IMAGES:\r\n            return {...state, isLoading: false, errMess: null, images: action.payload};\r\n\r\n        case ActionTypes.IMAGES_FAILED:\r\n            return {...state, isLoading: true, errMess: null, images: []}\r\n\r\n        case ActionTypes.IMAGES_LOADING:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    sno:'',\r\n    id:'',\r\n    cat:'',\r\n    name:'',\r\n    addr:'',\r\n    phno:'',\r\n    warehousesno:0,\r\n    area:[],\r\n    warehouses:[],\r\n};\r\n\r\nexport const Payment = {\r\n    sno:'',\r\n    id:'',\r\n    cat:'',\r\n    name:'',\r\n    tranxid:'',\r\n    amt:'',\r\n    type:'',\r\n    phno:'',\r\n    other:'',\r\n};\r\n\r\nexport const Image = {\r\n    img : '',\r\n}","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport { HashRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport { Provider } from 'react-redux';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n      <HashRouter>\n          <div className=\"App\">\n            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"></link>\n            <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>\n            <Main />\n            <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n            <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n          </div>\n      </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Costumers} from './costumers';\r\nimport {Payments} from './payments';\r\nimport {Images} from './images';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback, Payment, Image } from './forms';\r\nimport { costumers } from '../shared/costumers';\r\nimport { payments } from '../shared/payment';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            Costumers:Costumers,\r\n            Payments:Payments,\r\n            Images:Images,\r\n            ...createForms({\r\n                costumer: InitialFeedback,\r\n                payment:Payment,\r\n                image : Image,\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}