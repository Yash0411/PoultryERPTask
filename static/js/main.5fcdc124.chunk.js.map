{"version":3,"sources":["components/HomeComponent.js","shared/costumers.js","shared/baseUrl.js","redux/ActionCreaters.js","redux/ActionTypes.js","components/AddCostumer.js","components/Popover.js","components/CostumerDetails.js","components/PaymentDetails.js","components/AddPayment.js","components/AllPayments.js","components/MainComponent.js","redux/costumers.js","redux/payments.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Home","style","paddingLeft","paddingRight","borderRadius","fontSize","Component","costumers","baseUrl","req","XMLHttpRequest","onreadystatechange","readyState","DONE","console","log","responseText","open","setRequestHeader","send","fetchCostumers","dispatch","type","fetch","then","response","ok","error","Error","status","statusText","errorMessage","json","payload","catch","message","fetchPayments","payments","AddCostumer","props","state","sno","id","cat","name","addr","phno","warehousesno","area","warehouses","handleInputChange","bind","handleSubmit","event","target","value","checked","this","setState","values","alert","JSON","stringify","postCostumer","resetFeedbackForm","className","to","onSubmit","model","background","paddingTop","class","htmlFor","text","placeholder","len","onChange","width","textAlign","md","size","offset","color","withRouter","connect","Costumers","Example","warehouses1","costumer1","map","w","useState","popoverOpen","setPopoverOpen","toggle","onClick","placement","isOpen","CostumerDetail","costumer","costumerlist","key","handleChange","length","scope","zostumers","PaymentDetail","tranxid","amtsent","otherinfo","Payments","AddPayment","resetPaymentForm","required","AllPayments","refresh","totalamt","notranx","Main","height","position","top","left","overflowx","align","path","component","exact","PaymentDetails","postPayment","actions","reset","newCostumer","push","method","body","headers","credentials","newPayment","amt","other","z","filter","a","parseInt","err","isLoading","errMess","action","payment","date","Date","toISOString","concat","InitialFeedback","Payment","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","rel","href","integrity","crossorigin","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5fcdc124.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\n\r\n\r\n\r\nclass Home extends Component {\r\n    render() {         \r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px', fontSize:'20px'}}>\r\n                HOME \r\n                <br/>\r\n                This is a demo website Hosted for submission Task Porpose comprising the elements at front end.\r\n                <br/>\r\n                Modifications can be bade and the pages can be made more Dynamic as per we need. \r\n                <br/>\r\n                Frontend is not connected to a permanent database as the application is for trial purposes and hence prevent the database accumulation at this point but the code is ready and is in the commented format in the action creaters file.\r\n                <br/>\r\n                Alerts are defined at various places in order to verify the pushed data.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","export const costumers = \r\n    [\r\n        {\r\n            \"id\":'1',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer1\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'2',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer2\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'3',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer3\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'4',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer4\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'5',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer5\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                [\"t1,25\"],[\"t2,25\"],\r\n            ]\r\n        },\r\n\r\n        {\r\n            \"id\":'6',\r\n            \"cat\":\"Vendor\",\r\n            \"name\":\"Costumer6\",\r\n            \"addr\":\"Address\",\r\n            \"phno\":\"PhNo\",\r\n            \"warehousesno\":2,\r\n            \"area\":\"234sft\",\r\n            \"warehouses\":[\r\n                \"Warehouse 1\",\"Warehouse 1\"\r\n            ],\r\n            \"payments\":[\r\n                {\"tranxid\":\"t1\"},\r\n                {\"tranxid\":\"t2\"},\r\n                {\"tranxid\":\"t3\"},\r\n            ]\r\n        },\r\n    ]\r\n","export const baseUrl = 'https://my-json-server.typicode.com/yash0411/mock-data';\r\n\r\n\r\nlet req = new XMLHttpRequest();\r\n\r\nreq.onreadystatechange = () => {\r\n  if (req.readyState == XMLHttpRequest.DONE) {\r\n    console.log(req.responseText);\r\n  }\r\n};\r\n\r\nreq.open(\"GET\", \"https://api.jsonbin.io/b/5f0b4ec85d4af74b012b23d3\", true);\r\nreq.setRequestHeader(\"secret-key\", \"$2b$10$zavSo2g3hlKK6Na74hMCheP4JdDOvB8M3J6RAL.CZueozSrnDKPXq\");\r\nreq.send();\r\n\r\n\r\n//https://my-json-server.typicode.com/yash0411/mock-data","import * as ActionTypes from './ActionTypes';\r\nimport { costumers } from '../shared/costumers';\r\nimport { payments,total } from '../shared/payment';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\n\r\nexport const addCostumer = (costumer)=>\r\n{\r\n    return(\r\n        {\r\n            type:ActionTypes.ADD_COSTUMERS,\r\n            payload:costumer\r\n        }\r\n    )\r\n}\r\n\r\nexport const postCostumer = (values)=>(dispatch)=>{\r\nconst newCostumer ={\r\n        id:values.sno,\r\n        cat:values.cat,\r\n        name:values.name,\r\n        addr:values.addr,\r\n        phno:values.phno,\r\n        warehousesno:values.warehousesno,\r\n        area:values.area,\r\n        warehouses:values.warehouses,\r\n        totalamt:0,\r\n        notranx:0,\r\n}\r\n\r\ncostumers.push(newCostumer)\r\n\r\nreturn fetch(baseUrl + \"costumers\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newCostumer),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n      })\r\n        .then(\r\n          response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } else {\r\n              var error = new Error(\r\n                \"Error \" + response.status + \": \" + response.statusText\r\n              );\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n            throw error;\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response =>\r\n          alert(\"Costumer Added!\" + JSON.stringify(response))\r\n        )\r\n        .catch(error => {\r\n          console.log(\"post Costumer\", error.message);\r\n          alert(\"Your Costumer could not be posted\\nError: \" + error.message);\r\n        });\r\n    };\r\n\r\n\r\nexport const costumerFailed = (errmess)=>({\r\n        type:ActionTypes.COSTUMERS_FAILED,\r\n        payload:errmess\r\n})\r\n\r\nexport const costumersLoading=()=>({\r\n        type:ActionTypes.COSTUMERS_LOADING\r\n});\r\n\r\n\r\n\r\nexport const fetchCostumers = () => (dispatch) => {\r\n        dispatch(costumersLoading(true));\r\n\r\n    \r\n        return fetch(baseUrl + 'costumers')\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n    \r\n                    throw error;\r\n                }\r\n            },\r\n                error => {\r\n                    var errorMessage = new Error(error.errorMessage);\r\n                    throw errorMessage;\r\n                }\r\n            )\r\n            .then(response => response.json())\r\n            .then(costumers=> dispatch(addCostumer(costumers)))\r\n            .catch(error => dispatch(costumerFailed(error.message)))\r\n    }\r\n\r\n\r\n\r\nexport const addPayment = (payment)=>\r\n{\r\n    return(\r\n        {\r\n            type:ActionTypes.ADD_PAYMENTS,\r\n            payload:payment\r\n        }\r\n    )\r\n}\r\n\r\nexport const updateCostumer = (value)=>\r\n{\r\n  return(\r\n    {\r\n      type : ActionTypes.UPDATE_COSTUMERS,\r\n      payload:value\r\n    }\r\n  )\r\n}\r\n\r\nexport const postPayment = (values)=>(dispatch)=>{\r\nconst name = values.name\r\nconst newPayment ={\r\n        id:values.sno,\r\n        cat:values.cat,\r\n        name:values.name,\r\n        tranxid:values.tranxid,\r\n        amtsent:values.amt,\r\n        type:values.type,\r\n        phno:values.phno,\r\n        otherinfo:values.other,\r\n}\r\n  \r\nreturn (\r\n  fetch(baseUrl + \"costumers/\")\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      try{\r\n      let z = json.filter(a => a.name==values.name)[0]\r\n    \r\n      if(z)\r\n      {\r\n        fetch(baseUrl + \"costumers/\"+z.id, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify({notranx:z.notranx+1,totalamt:z.totalamt+parseInt(values.amt)}),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n        })\r\n        .then(\r\n          response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } else {\r\n              var error = new Error(\r\n                \"Error \" + response.status + \": \" + response.statusText\r\n              );\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n            throw error;\r\n          }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response =>\r\n          alert(\"Costumer DaTa Updated!\" + JSON.stringify(response))\r\n        )\r\n        .then( response =>\r\n          {\r\n            fetch(baseUrl + \"payments\", {\r\n              method: \"POST\",\r\n              body: JSON.stringify(newPayment),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\"\r\n              },\r\n              credentials: \"same-origin\"\r\n            })\r\n              .then(\r\n                response => {\r\n                  if (response.ok) {\r\n                    return response;\r\n                  } else {\r\n                    var error = new Error(\r\n                      \"Error \" + response.status + \": \" + response.statusText\r\n                    );\r\n                    error.response = response;\r\n                    throw error;\r\n                  }\r\n                },\r\n                error => {\r\n                  throw error;\r\n                }\r\n              )\r\n              .then(response => response.json())\r\n              .then(response =>\r\n                alert(\"Payment Added!\" + JSON.stringify(response))\r\n              )\r\n              .catch(error => {\r\n                console.log(\"post Payment\", error.message);\r\n                alert(\"Your Payment could not be posted\\nError: \" + error.message);\r\n              })\r\n          })\r\n        .catch(error => {\r\n          console.log(\"Update Costumer\", error.message);\r\n          alert(\"Your Costumer Data could not be updated\\nError: \" + error.message);\r\n        })\r\n\r\n        \r\n      \r\n      }\r\n        else{\r\n          throw 1\r\n        }\r\n      }\r\n      catch(err){\r\n        alert(\"No such Costumer exists in the database\")\r\n      }\r\n    \r\n    })  \r\n\r\n  \r\n  )\r\n};\r\n\r\n\r\nexport const paymentFailed = (errmess)=>({\r\n        type:ActionTypes.PAYMENTS_FAILED,\r\n        payload:errmess\r\n})\r\n\r\nexport const paymentsLoading=()=>({\r\n        type:ActionTypes.PAYMENTS_LOADING\r\n});\r\n\r\nexport const fetchPayments = () => (dispatch) => {\r\n  dispatch(paymentsLoading(true));\r\n\r\n  return fetch(baseUrl + 'payments')\r\n      .then(response => {\r\n          if (response.ok) {\r\n              return response;\r\n          } else {\r\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n              error.response = response;\r\n\r\n              throw error;\r\n          }\r\n      },\r\n          error => {\r\n              var errorMessage = new Error(error.errorMessage);\r\n              throw errorMessage;\r\n          }\r\n      )\r\n      .then(response => response.json())\r\n      .then(payments=> dispatch(addPayment(payments)))\r\n      .catch(error => dispatch(paymentFailed(error.message)))\r\n}\r\n","export const COSTUMERS_LOADING = 'COSTUMERS_LOADING';\r\nexport const COSTUMERS_FAILED = 'COSTUMERS_FAILED';\r\nexport const ADD_COSTUMERS = 'ADD_COSTUMERS';\r\nexport const UPDATE_COSTUMERS = 'UPDATE_COSTUMERS';\r\nexport const PAYMENTS_LOADING = 'PAYMENTS_LOADING';\r\nexport const PAYMENTS_FAILED = 'PAYMENTS_FAILED';\r\nexport const ADD_PAYMENTS = 'ADD_PAYMENTS';","import React,{Component} from 'react';\r\nimport {costumers} from '../shared/costumers'\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row ,Input} from 'reactstrap';\r\nimport '../App.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n    \r\nimport {Link} from 'react-router-dom';\r\nimport {withRouter } from 'react-router-dom';\r\nimport { postCostumer, fetchCostumers, postPayment } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\nclass AddCostumer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sno:'',\r\n            id:'',\r\n            cat:'',\r\n            name:'',\r\n            addr:'',\r\n            phno:'',\r\n            warehousesno:0,\r\n            area:[],\r\n            warehouses:[],\r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values) {\r\n        alert(JSON.stringify(values))\r\n        this.props.postCostumer(values);\r\n        this.props.resetFeedbackForm();\r\n        this.props.fetchCostumers();\r\n      }\r\n\r\n\r\n     \r\n      \r\n    render() { \r\n        \r\n            return (\r\n                <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                    <div className=\"incanvas\" style={{}}>\r\n                        <b>Add Costumer Details</b>\r\n                        <Link type=\"button\" className=\"topbutton float-right\" to='/costumerdetails'>Save</Link>\r\n                    </div>\r\n\r\n\r\n                    <Form onSubmit={this.handleSubmit} model=\"costumer\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n\r\n                        \t\r\n                        <Row className=\"form-group mb-2 formrow\">\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"sno\">S.no</label>\r\n                                <Control.text model=\".sno\" class=\"formbox form-control\" placeholder={this.props.len+1} value={this.props.len+1}/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"name\">Costumer Name</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".name\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"cat\">Category</label>\r\n                                <Control.text model=\".cat\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"addr\">Address</label>\r\n                                <Control.text model=\".addr\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group mb-2 formrow\">\r\n\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"phno\">Contact Number</label>\r\n                                <Control.text model=\".phno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"warehouseno\">Number Of Warehouses</label>\r\n                                <Control.text model=\".warehouseno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <hr style={{width:'100%'}}></hr>\r\n\r\n                        <div className=\"form-group mb-2 formrow\" >\r\n\r\n                            <h3 style={{textAlign:'center'}}>Add Warehouses</h3>\r\n\r\n                            <Row className=\"form-group mb-2 formrow\">\r\n\r\n                                <div class=\"form-group mb-2 \" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"warehouses\">Warehouse Name</label>\r\n                                    <Control.text model=\".warehouses[0]\" class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                                <div class=\"form-group mb-2 mx-4 float-right\" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"area[0]\">Area</label>\r\n                                    <Control.text model=\".area[0]\" class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group mb-2 formrow\">\r\n\r\n                                <div class=\"form-group mb-2 \" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"warehouses[1]\">Warehouse Name</label>\r\n                                    <Control.text model=\".warehouses[1]\" class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                                <div class=\"form-group mb-2 mx-4 float-right\" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"area[1]\">Area</label>\r\n                                    <Control.text model=\".area[1]\" class=\"formbox form-control\" />\r\n                                </div>\r\n\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group mb-2 formrow\">\r\n\r\n                                <div class=\"form-group mb-2 \" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"warehouses[2]\">Warehouse Name</label>\r\n                                    <Control.text model=\".warehouses[2]\" class=\"formbox form-control\"/>\r\n                                </div>\r\n\r\n                                <div class=\"form-group mb-2 mx-4 float-right\" style={{fontSize:'15px'}}>\r\n                                    <label htmlFor=\"area[2]\">Area</label>\r\n                                    <Control.text model=\".area[2]\" class=\"formbox form-control\" />\r\n                                </div>\r\n\r\n                            </Row>\r\n                        </div>\r\n                        \r\n\r\n                        {/*Submit button for the form.*/}\r\n                        <Row className=\"form-group\">                            \r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Save\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                </Form>\r\n\r\n            </div>\r\n            );\r\n        };\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AddCostumer));","import React, { useState } from 'react';\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { costumers } from '../shared/costumers';\r\n\r\nconst Example = (props) => {\r\n   \r\n    const warehouses1 = props.costumer1.warehouses.map((w) => {\r\n        return(\r\n            <div>\r\n                <strong>{w}</strong>\r\n            </div>\r\n        )\r\n    })\r\n    \r\n  const [popoverOpen, setPopoverOpen] = useState(false);\r\n\r\n  const toggle = () => setPopoverOpen(!popoverOpen);\r\n  return (\r\n    <div>\r\n      <div id={props.costumer1.name} type=\"button\" onClick={toggle}>\r\n        <b>View</b>\r\n      </div>\r\n      <Popover placement=\"bottom\" isOpen={popoverOpen} target={props.costumer1.name} toggle={toggle}>\r\n        <PopoverHeader>Warehouses</PopoverHeader>\r\n        <PopoverBody>{warehouses1}</PopoverBody>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Example;","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport '../App.css';\r\nimport Example from './Popover';\r\nimport {costumers} from '../shared/costumers';\r\nimport {withRouter } from 'react-router-dom';\r\nimport { fetchCostumers } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      zostumers : state.Costumers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\nclass CostumerDetail extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n      }\r\n    \r\n    handleChange(costumer){\r\n        return(\r\n            <div>\r\n                <td>{costumer.cat}</td>\r\n                <td>{costumer.name}</td>\r\n            </div>\r\n        )\r\n      }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.fetchCostumers();\r\n    }\r\n\r\n    render() { \r\n        //alert(JSON.stringify(this.props.costumers))\r\n        \r\n        const costumerlist = this.props.costumers.costumers.map((costumer) => {\r\n            return (\r\n                <tr key={costumer.id}>\r\n                    <th><input type=\"checkbox\" className=\"m-1\" onChange={this.handleChange(costumer)}></input>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.addr}</td>\r\n                    <td>{costumer.phno}</td>\r\n                    <td>{costumer.warehouses.length}</td>\r\n                    <td><Example costumer1={costumer} key={costumer.id}/></td>\r\n                    <td>{costumer.area}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <strong>Costumer Details</strong>\r\n                    <Link type=\"button\" className=\"topbutton float-right\" to='/addcostumer'>Add New</Link>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{ borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\">Save</button>\r\n                            <button className=\"button1 mx-sm-1\">Delete</button>\r\n                            <button className=\"button1 mx-sm-1\">Edit</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Address</th>\r\n                            <th scope=\"col\">Contant No</th>\r\n                            <th scope=\"col\">No Of Warehouses</th>\r\n                            <th scope=\"col\">Warehouse Name</th>\r\n                            <th scope=\"col\">Area</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(CostumerDetail));","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport {payments } from '../shared/payment';\r\nimport { fetchPayments } from '../redux/ActionCreaters';\r\nimport {withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      payments : state.Payments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchPayments:()=>{dispatch(fetchPayments())},\r\n    }\r\n  )\r\n}\r\n\r\nclass PaymentDetail extends Component {\r\n\r\n   \r\n    \r\n    handleChange(costumer){\r\n        return(\r\n            <div>\r\n                <td>{costumer.cat}</td>\r\n                <td>{costumer.name}</td>\r\n            </div>\r\n        )\r\n      }\r\n\r\n    \r\n      componentDidMount()\r\n      {\r\n          this.props.fetchPayments();\r\n      }\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const costumerlist =this.props.payments.payments.map((costumer) => {\r\n            return (\r\n                <tr>\r\n                    <th>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.tranxid}</td>\r\n                    <td>{costumer.phno}</td>\r\n                    <td>{costumer.amtsent}</td>\r\n                    <td>{costumer.type}</td>\r\n                    <td>{costumer.otherinfo}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <b>Payment Details</b>\r\n                    <Link type=\"button\" className=\"topbutton float-right\" to='/addpayment'>Add New</Link>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\">Save</button>\r\n                            <button className=\"button1 mx-sm-1\">Delete</button>\r\n                            <button className=\"button1 mx-sm-1\">Edit</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1 mx-sm-1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Tranx ID</th>\r\n                            <th scope=\"col\">Contant No</th>\r\n                            <th scope=\"col\">Amount sent</th>\r\n                            <th scope=\"col\">Transaction Type</th>\r\n                            <th scope=\"col\">Other Information</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(PaymentDetail));","import React,{Component} from 'react';\r\nimport {payments} from '../shared/payment'\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\r\nimport '../App.css';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n    \r\nimport {Link} from 'react-router-dom';\r\nimport { fetchPayments } from '../redux/ActionCreaters';\r\nimport { postPayment } from '../redux/ActionCreaters';\r\nimport {withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      payments : state.Payments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n        fetchPayments:()=>{dispatch(fetchPayments())},\r\n    }\r\n  )\r\n}\r\n\r\n\r\nclass AddPayment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    \r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    handleSubmit(values) {\r\n        alert(JSON.stringify(values))\r\n        this.props.postCostumer(values);\r\n        this.props.fetchPayments();\r\n        this.props.resetPaymentForm();\r\n        \r\n      }\r\n    \r\n      \r\n    render() { \r\n        \r\n            return (\r\n                <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                    <div className=\"incanvas\" style={{}}>\r\n                        <b>Add Payment Details</b>\r\n                        <Link type=\"button\" className=\"topbutton float-right\" to='/paymentdetails'>Save</Link>\r\n                    </div>\r\n\r\n\r\n                    <Form onSubmit={this.handleSubmit} model=\"payment\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n\r\n                        \t\r\n                        <Row>\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".sno\">S.no</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".sno\" class=\"formbox form-control\" placeholder={this.props.len+1} value={this.props.len+1}/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".name\">Costumer Name</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".name\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".cat\">Category</label>\r\n                                <Control.text model=\".cat\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".tranxid\">Transaction ID</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".tranxid\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\".amt\">Amount Sent</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".amt\" class=\"formbox form-control\" required/>\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"name\">Transaction Type</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".type\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                            <div class=\"form-group mb-2 mx-4\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"phno\">Pnone Number</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".phno\" class=\"formbox form-control\"/>\r\n                            </div>\r\n\r\n                        </Row>\r\n\r\n                           <div class=\"form-group mb-2\" style={{fontSize:'15px'}}>\r\n                                <label htmlFor=\"other\">Other Information</label>\r\n                                <Control.text onChange={this.handleInputChange} model=\".other\" class=\"formbox form-control\" />\r\n                            </div>\r\n\r\n                        \r\n\r\n                        <hr style={{width:'100%'}}></hr>\r\n\r\n                        \r\n\r\n                        {/*Submit button for the form.*/}\r\n                        <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Save Payment\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                </Form>\r\n\r\n            </div>\r\n            );\r\n        };\r\n}\r\n\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AddPayment));","import React,{Component} from 'react';\r\nimport {AddCostumer} from './AddCostumer';\r\nimport {Link} from 'react-router-dom';\r\nimport {payments, total } from '../shared/payment';\r\nimport { costumers } from '../shared/costumers';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchCostumers } from '../redux/ActionCreaters';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n    }\r\n  )\r\n}\r\n\r\n\r\nclass AllPayments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        };\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    refresh(){\r\n        this.props.fetchCostumers();\r\n    }\r\n\r\n\r\n\r\n    render() { \r\n\r\n        const costumerlist =this.props.costumers.costumers.map((costumer) => {\r\n            return (\r\n                <tr>\r\n                    <th>{costumer.id}</th>\r\n                    <td>{costumer.cat}</td>\r\n                    <td>{costumer.name}</td>\r\n                    <td>{costumer.totalamt}</td>\r\n                    <td>{costumer.notranx}</td>\r\n                </tr>\r\n            );\r\n        });\r\n    \r\n        return (\r\n            <div style={{paddingLeft:'40px', paddingRight:'40px' , borderRadius:'12px'}}>\r\n                <div className=\"incanvas\">\r\n                    <b>All Payments Reports</b>\r\n                </div>\r\n\r\n                <div className=\"component\" style={{background:'white', borderRadius:'12px',paddingLeft:'40px', paddingRight:'40px',paddingTop:'40px'}}>\r\n                    <div >\r\n                        <input type=\"text\" className=\" form-control-sm\" placeholder=\"Search\"></input>\r\n                        <div className=\"float-right\">\r\n                            <button className=\"button2 mx-sm-1\" onClick={this.refresh}>Refresh</button>\r\n                            <button className=\"button1 mx-sm-1\">Filter</button>\r\n                            <button className=\"button1\">Print</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"component\"  style={{textAlign:'center'}}>\r\n                    <table className=\"table\" style={{fontSize:'15px'}}>\r\n                        <thead>\r\n                            <th scope=\"col\">Sr No</th>\r\n                            <th scope=\"col\">Cat</th>\r\n                            <th scope=\"col\">Costumer name</th>\r\n                            <th scope=\"col\">Total Amount Sent</th>\r\n                            <th scope=\"col\">No. of Transactions</th>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n                            {costumerlist}        \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(AllPayments));","import React,{Component} from 'react';\r\nimport '../App.css';\r\nimport Home from './HomeComponent';\r\nimport CostumerDetail from './CostumerDetails';\r\nimport PaymentDetails from './PaymentDetails';\r\nimport {costumers } from '../shared/costumers';\r\nimport { Switch, Route, Redirect,withRouter } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport AddPayment from './AddPayment';\r\nimport AllPayments from './AllPayments';\r\nimport { Navbar, NavbarBrand } from 'reactstrap';\r\nimport { postCostumer, fetchCostumers, postPayment, fetchPayments } from '../redux/ActionCreaters';\r\nimport AddCostumer from './AddCostumer';\r\nimport {actions } from 'react-redux-form';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = state=>\r\n{\r\n  return{\r\n      costumers : state.Costumers,\r\n      payments : state.Payments\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>\r\n{\r\n  return (\r\n    {\r\n      fetchCostumers:()=>{dispatch(fetchCostumers())},\r\n      fetchPayments:()=>{dispatch(fetchPayments())},\r\n      resetFeedbackForm:()=>{dispatch(actions.reset('costumer'))},\r\n      postCostumer:(values)=>dispatch(postCostumer(values)),\r\n      resetPaymentForm:()=>{dispatch(actions.reset('payment'))},\r\n      postPayment:(values)=>dispatch(postPayment(values)),\r\n    }\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.fetchCostumers();\r\n        this.props.fetchPayments()\r\n    }\r\n    \r\n    render() {      \r\n    \r\n        return (\r\n        <div className=\"all\">\r\n            <nav className=\"navbar navbar-light bg-light sticky-top navclass\" style={{}}>\r\n                <NavbarBrand ><b>Poultry ERP Project</b></NavbarBrand>\r\n                <div className=\"float-right\">\r\n                    <NavLink type=\"button\"className=\"btn btn-outline-success my-2 my-sm-0 btn1 mx-sm-1\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0 btn1 mx-sm-1\" type=\"button\">My Documents</button>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"button\">Logout<span className=\"fa fa-logout fa-lg\"></span> </button>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"cover\">\r\n                <div class=\" text-dark sidenav\" style={{height: '100%',\r\n                                                            position: 'fixed',\r\n                                                            top: '0',\r\n                                                            left: '0',\r\n                                                            overflowx: 'hidden',\r\n                                                            paddingTop: '7rem',\r\n                                                            background: '#FFFFFF 0% 0% no-repeat padding-box'}}>\r\n\r\n                    <div className=\"\">\r\n                        <strong class=\"p-3 mb-2 bn1\">Data input</strong>\r\n                        <hr width=\"50%\" align=\"left\" style={{paddingLeft:'20%', color:'#707070'}}></hr>\r\n                        <NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  to='/costumerdetails' style={{paddingTop:'20px'}}>Add Profile information</NavLink>\r\n                        <NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg  mx-sm-1\"  to='/paymentdetails' style={{paddingTop:'20px'}}>Payment Transactions</NavLink>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"\">\r\n                        <strong class=\"p-3 mb-2 bn1 \">Reports</strong>\r\n                        <hr width=\"50%\" align=\"left\" style={{paddingLeft:'20%', color:'#707070'}}></hr>\r\n                        <NavLink className=\"sidebaritem p-2 mb-3 fa fa-home fa-lg mx-sm-1\"  to='/allpayments' style={{paddingTop:'20px'}}>Payment Report</NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        <Route path='/home' component={Home} />\r\n                        <Route exact path='/costumerdetails' component={()=><CostumerDetail costumers={this.props.costumers}/>} />\r\n                        <Route exact path='/addcostumer' component={()=><AddCostumer len={this.props.costumers.costumers.length} resetFeedbackForm={this.props.resetFeedbackForm} postCostumer={this.props.postCostumer}/>} />\r\n                        <Route exact path='/paymentdetails' component={()=><PaymentDetails payments={this.props.payments}/>} />\r\n                        <Route exact path='/addpayment' component={()=><AddPayment len={this.props.payments.payments.length} resetPaymentForm={this.props.resetPaymentForm} postCostumer={this.props.postPayment}/>} />\r\n                        <Route exact path='/allpayments' component={AllPayments} />\r\n                        <Redirect to=\"/home\" />\r\n                    </Switch>\r\n  \r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n      }\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Costumers = (state = { isLoading: true,\r\n    errMess: null,\r\n    costumers:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COSTUMERS:\r\n            return {...state, isLoading: false, errMess: null, costumers: action.payload};\r\n\r\n        case ActionTypes.COSTUMERS_FAILED:\r\n            return {...state, isLoading: true, errMess: null, costumers: []}\r\n\r\n        case ActionTypes.UPDATE_COSTUMERS:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Payments = (state = { errMess: null, payments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PAYMENTS:\r\n      return {...state, errMess: null, payments: action.payload};\r\n\r\n    case ActionTypes.PAYMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_PAYMENTS:\r\n        var payment = action.payload;\r\n        payment.id = state.payments.length;\r\n        payment.date = new Date().toISOString();\r\n        return { ...state, payments: state.payments.concat(payment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","export const InitialFeedback = {\r\n    sno:'',\r\n    id:'',\r\n    cat:'',\r\n    name:'',\r\n    addr:'',\r\n    phno:'',\r\n    warehousesno:0,\r\n    area:[],\r\n    warehouses:[],\r\n};\r\n\r\nexport const Payment = {\r\n    sno:'',\r\n    id:'',\r\n    cat:'',\r\n    name:'',\r\n    tranxid:'',\r\n    amt:'',\r\n    type:'',\r\n    phno:'',\r\n    other:'',\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent';\nimport { HashRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\n\nimport { Provider } from 'react-redux';\n\nconst store = ConfigureStore();\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n      <HashRouter>\n          <div className=\"App\">\n            <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\"></link>\n            <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>\n            <Main />\n            <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\n            <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\n          </div>\n      </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Costumers} from './costumers';\r\nimport {Payments} from './payments';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback, Payment } from './forms';\r\nimport { costumers } from '../shared/costumers';\r\nimport { payments } from '../shared/payment';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            Costumers:Costumers,\r\n            Payments:Payments,\r\n            ...createForms({\r\n                costumer: InitialFeedback,\r\n                payment:Payment\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}